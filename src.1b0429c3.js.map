{"version":3,"sources":["js/partilas/getRefs.js","js/partilas/fethResponse.js","js/partilas/normalCode.js","js/main.js","index.js"],"names":["form","document","querySelector","ulContainer","BASE_URL","city","fetch","then","response","json","onSearch","e","preventDefault","search","currentTarget","elements","query","value","createMarkup","catch","err","console","log","finally","reset","obj","markup","innerHTML","location","name","current","weather_icons","join","weather_descriptions","temperature","localtime","refs","addEventListener"],"mappings":";;;AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACXA,KAAMC,SAASC,cAAc,SAC7BC,YAAaF,SAASC,cAAc,eAFzB,QAAA,QAAA;;ACKd,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EALD,MAAME,EAAW,sCAEF,SAAUC,EAAAA,GACdC,OAAAA,SAASF,uDAA8DC,KAC7EE,KAAKC,GAAYA,EAASC;;ACyB9B,aA7BD,IAAA,EAAA,EAAA,QAAA,cACA,EAAA,EAAA,QAAA,mBA4BC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAxBD,SAASC,EAASC,GACdA,EAAEC,iBACIC,MAAAA,EAASF,EAAEG,cAAcC,SAASC,MAAMC,OACjCJ,EAAAA,EAAAA,SAAAA,GACZN,KAAKW,GACLC,MAAMC,GAAOC,QAAQC,IAAIF,IACzBG,QAAQZ,EAAEG,cAAcU,SAG7B,SAASN,EAAaO,GACZV,MAAAA,EAAWW,EAAOD,GACnBtB,EAAAA,QAAAA,YAAYwB,UAAYZ,EAGjC,SAASW,EAAOD,GACJ,mGAEiCA,EAAIG,SAASC,uDACnBJ,EAAIK,QAAQC,cAAcC,KAAK,aAAaP,EAAIK,QAAQG,qBAAqBD,KAAK,+DACvEP,EAAIK,QAAQG,qBAAqBD,KAAK,4DAC3CP,EAAIK,QAAQI,sEACZT,EAAIG,SAASO,sCAvB1DC,EAAKpC,QAAAA,KAAKqC,iBAAiB,SAAU3B;;ACErC,aAAA,QAAA;;ACJA,aADA,QAAA,oBACA,QAAA","file":"src.1b0429c3.js","sourceRoot":"../src","sourcesContent":["export default {\n    form: document.querySelector('#form'),\n    ulContainer: document.querySelector('.container'),\n};","const BASE_URL = 'http://api.weatherstack.com/current';\n\nexport default function (city) {\n    return fetch(`${BASE_URL}?access_key=a9180199410b777ec9cb71c1c9e5cc53&query=${city}`)\n    .then(response => response.json());\n}","import refs from './getRefs';\nimport fetchWeather from './fethResponse';\n\nrefs.form.addEventListener('submit', onSearch);\n\nfunction onSearch(e) {\n    e.preventDefault()\n    const search = e.currentTarget.elements.query.value;\n    fetchWeather(search)\n    .then(createMarkup)\n    .catch(err => console.log(err))\n    .finally(e.currentTarget.reset());\n}\n\nfunction createMarkup(obj) {\n    const elements = markup(obj);\n    refs.ulContainer.innerHTML = elements;\n}\n\nfunction markup(obj) {\n    return `\n    <ul class=\"list list-weather centered\">\n          <li class=\"item\"><p class=\"city\">${obj.location.name}</p></li>\n          <li class=\"item\"><img src=\"${obj.current.weather_icons.join(\"\")}\" alt=\"${obj.current.weather_descriptions.join(\"\")}\"></li>\n          <li class=\"item\"><p class=\"condition\">${obj.current.weather_descriptions.join(\"\")}</p></li>\n          <li class=\"item\"><p class=\"temp\">${obj.current.temperature} c</p></li>\n          <li class=\"item\"><p class=\"time\">${obj.location.localtime}</p></li>\n    </ul>\n    `;\n}","// http://api.weatherstack.com/current\n//     ? access_key = YOUR_ACCESS_KEY\n//     & query = New York\n\n// import './partilas/spagetti';\nimport './partilas/normalCode';","import './scss/main.scss';\nimport './js/main';\n"]}